- name: Bootstrap proxmox
  hosts: all
  become: true
  tasks:
    - name: Remove PVE-entreprise.list
      file:
        path: /etc/apt/sources.list.d/pve-enterprise.list
        state: absent

    - name: Add gpg
      apt:
        name: gnupg2
        state: present
        update_cache: true

    - name: Log default ipv4
      debug:
        msg: "{{ ansible_default_ipv4 }}"

    - name: Log all ip addresses
      debug:
        msg: "{{ ansible_all_ipv4_addresses }}"

    - name: Add DNS entry to hostfile
      template:
        src: hosts.j2
        dest: /etc/hosts

    - name: Add PGP key
      apt_key:
        url: http://download.proxmox.com/debian/proxmox-ve-release-6.x.gpg
        state: present

    - name: Add sources.list
      apt_repository:
        repo: "deb http://download.proxmox.com/debian/pve buster pve-no-subscription"
        filename: pve-install-repo

    - name: Perform full upgrade
      apt:
        upgrade: full

    - name: Install proxmox
      apt:
        name:
          - proxmox-ve
          - postfix
          - open-iscsi
        state: present

    - name: Remove PVE-entreprise.lisr
      file:
        path: /etc/apt/sources.list.d/pve-enterprise.list
        state: absent

    - name: Remove os-prober
      apt:
        name: os-prober
        state: absent


- name: Configure network
  hosts: all
  tasks:
    - name: Insert/Update vmbr0 configuration stanza in /etc/network/interfaces
      blockinfile:
        path: /etc/network/interfaces
        block: |
          auto vmbr0
          #private sub network
          iface vmbr0 inet static
                  address  {{ internal_ip }}
                  netmask  255.255.255.0
                  bridge_ports none
                  bridge_stp off
                  bridge_fd 0

                  post-up echo 1 > /proc/sys/net/ipv4/ip_forward
                  post-up   iptables -t nat -A POSTROUTING -s '{{ internal_net }}' -o {{ nat_interface }} -j MASQUERADE
                  post-down   iptables -t nat -D POSTROUTING -s '{{ internal_net }}' -o {{ nat_interface }} -j MASQUERADE
      notify: reload vmbr0
      # beware, it will disconnect all running containers and VMs from the network

    - name: Apt pin unstable
      blockinfile:
        path: /etc/apt/preferences.d/limit-unstable
        block: |
          Package: *
          Pin: release a=unstable
          Pin-Priority: 90
        create: true

    - name: Add unstable source for wireguard
      apt_repository:
        repo: "deb http://deb.debian.org/debian/ unstable main"
        filename: unstable-wireguard

    - name: Install wireguard
      apt:
        name:
          - wireguard
          - pve-headers
        state: installed

    - name: Generate wireguard privatekey
      shell: "wg genkey > {{ wg_private_key_path }}"
      args:
        creates: "{{ wg_private_key_path }}"
      notify: generate wireguard publickey

    - name: Generate public keys if needed
      meta: flush_handlers

    - name: Read privatekey
      slurp:
        src: "{{ wg_private_key_path }}"
      register: wg_private_key

    - name: Read publickey
      slurp:
        src: "{{ wg_public_key_path }}"
      register: wg_public_key

    - name: generate wg0.conf
      template:
        src: wg0.conf.j2
        dest: /etc/wireguard/wg0.conf
        owner: root
        group: root
        mode: 0600

    - name: Install dnsmasq
      apt:
        name: dnsmasq
        state: installed
      environment:
        RUNLEVEL: 1

    - name: Deploy dnsmasq.conf
      template:
        src: dnsmasq.conf.j2
        dest: /etc/dnsmasq.conf
        owner: root
        group: root
        mode: 0640
      notify: restart dnsmasq

    - name: Ensure dnsmasq is started
      service:
        name: dnsmasq
        state: started


  handlers:
    - name: reload vmbr0
      command: "ifup vmbr0"
    - name: generate wireguard publickey
      command: "wg pubkey < {{ wg_private_key_path }} > {{ wg_public_key_path }}"
    - name: restart dnsmasq
      service:
        name: dnsmasq
        state: restarted
